[versions]
kotlin_version = "1.9.0"
gradle_plugin_version = "8.2.0"

###########################谷歌官方库，例如AndroidX系列，material组件库，room库，导航库，布局库等#########################
androidx_core = "1.8.0"
appcompat = "1.6.1"
fragment = "1.6.1"
activity = "1.8.0"

google_material = "1.9.0"
androidx_constraintLayout = "2.1.4"
androidx_preference = "1.2.0"
androidx-recyclerview = "1.2.1"

#lifecycle
lifecycle_version = "2.7.0"
arch_version = "2.2.0"

androidx_collection = "1.3.0"

##################################################其他依赖的版本#########################################
leak = "2.8.1"
coil-kt = "2.2.2"
kotlin_serialization_ver_160rc = "1.6.0-RC"

[libraries]
##############################################Kotlin Gradle插件依赖库##################################################
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin_version" }

###################################################gradle插件依赖库##################################################
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "gradle_plugin_version" }

##########################谷歌官方库，例如AndroidX系列，material组件库，room库，导航库，布局库等#########################
#AndroidX核心库
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx_core" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "activity" }

#布局组件库
google-material = { module = "com.google.android.material:material", version.ref = "google_material" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx_constraintLayout" }
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "androidx_preference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }

#Lifecycle依赖库
# ViewModel
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle_version" }
# LiveData
lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle_version" }
# Lifecycles only = { module =without ViewModel or LiveData}
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle_version" }
# Saved state module for ViewModel
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle_version" }
# Annotation processor
# alternately - if using Java8, use the following instead of lifecycle-compiler
lifecycle-common-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle_version" }
# optional - helpers for implementing LifecycleOwner in a Service
lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle_version" }
# optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle_version" }
# optional - ReactiveStreams support for LiveData
lifecycle-reactivestreams-ktx = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "lifecycle_version" }
# optional - Test helpers for LiveData
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "arch_version" }
# optional - Test helpers for Lifecycle runtime
lifecycle-runtime-testing = { module = "androidx.lifecycle:lifecycle-runtime-testing", version.ref = "lifecycle_version" }


#collection库,fragment库已经引入
androidx-collection = { module = "androidx.collection:collection-ktx", version.ref = "androidx_collection" }

##################################其他依赖#########################################
serialization160rc = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin_serialization_ver_160rc" }
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leak" }
coil-kt = { module = "io.coil-kt:coil", version.ref = "coil-kt" }


[plugins]
#application和library插件
android-application = { id = "com.android.application", version.ref = "gradle_plugin_version" }
android-library = { id = "com.android.library", version.ref = "gradle_plugin_version" }
#kotlin支持
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin_version" }

##################################内建插件#########################################
# Plugins defined by this project
buildLogic-android-app = { id = "kiylx.build_logic.android.application", version = "unspecified" }
buildLogic-android-app-compose = { id = "kiylx.build_logic.android.application.compose", version = "unspecified" }
buildLogic-android-library-compose = { id = "kiylx.build_logic.android.library.compose", version = "unspecified" }
buildLogic-android-library-empty = { id = "kiylx.build_logic.android.library.empty", version = "unspecified" }

##################################其他插件#########################################
# kotlin序列化插件的版本会跟kotlin编译器同时发布，因此一致
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin_version" }


[bundles]
bundleAndroidx = [
    "androidx-appCompat", "androidx-core",
    "androidx-fragment", "androidx-activity",
    "lifecycle-runtime-ktx", "lifecycle-viewmodel-ktx",
    "androidx-constraintLayout"
]